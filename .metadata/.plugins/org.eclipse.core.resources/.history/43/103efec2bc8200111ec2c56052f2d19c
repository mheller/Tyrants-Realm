<?xml version="1.0" encoding="utf-8"?>

<s:TitleWindow
			   xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:views="views.*"
			   xmlns:pkgInventory="pkgInventory.*"
			   width="100%"  height="465"
			   minWidth="500" minHeight="500"
			   title="Character View"
			   xmlns:resizableTitleWindow ="resizableTitleWindow.*"
			   creationComplete="creationCompleteHandler(event)"
			   close="handleCloseEvent();"
			   >
			   
	<s:layout>
		<s:HorizontalLayout paddingLeft="0" paddingRight="0" gap="1"/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import character.Character;
			
			import events.DragDropEvent;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.BitmapAsset;
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			import mx.utils.OnDemandEventDispatcher;
			
			import pkgInventory.Item;
			import pkgInventory.ItemStack;
			import pkgInventory.ItemStackView;
			
			import pkgParty.CharacterSelectedEvent;
			import pkgParty.Party;

			
			[Bindable]
			public var char:Character;	
			
			[Bindable]
			public var party:Party;	

			
			public var item:Item;
			
			private function handleCloseEvent():void{
				visible = false;
				
			}		
			protected function creationCompleteHandler(event:FlexEvent):void
			{		
					addEventListener(DragDropEvent.DRAG_FROM_CHARACTER,handleDragFromCharacter);	
					addEventListener(DragDropEvent.DRAG_FROM_INVENTORY,handleDragFromInventory);
					character_apperance_container.addEventListener(DragEvent.DRAG_ENTER, acceptDrop);
					character_apperance_container.addEventListener(DragEvent.DRAG_DROP, handleDrop);
					
					// capture the event pop up by party window
					this.systemManager.addEventListener("CharacterIsSelected",handleCharacterSelected);
			}
			
			
			private function handleCharacterSelected(event:CharacterSelectedEvent):void {
				//Alert.show("Event change character");
				this.char = party.currChar;
				//recreate the 2 list view when different character is selected
				current_list_view1.createListView();
				current_list_view2.createListView();
			}


			public function handleDragFromCharacter(event:DragDropEvent):void{
				trace("drag from character");
				var source:ItemStack = ((DragDropEvent)(event)).src as ItemStack;
				var target:ItemStack = ((DragDropEvent)(event)).tar as ItemStack;
				target.pushItemFromSimilarStack(source);
//				char.appearance = "assets/"+(String)(char.name.value)+".jpg";
				char.appearance_weapon = null;
			}
			
			public function handleDragFromInventory(event:DragDropEvent):void{
				trace("drag from inventory");
				var source:ItemStack = ((DragDropEvent)(event)).src as ItemStack;
				var target:ItemStack = ((DragDropEvent)(event)).tar as ItemStack;
				
				var same_category:Boolean = false;
				var itemS:ItemStack=ItemStack(char.current_items.list_itemStacks.getItemAt(0));
				for(var i:int=0;i<char.current_items.maxSize;i++){
					itemS = ItemStack(char.current_items.list_itemStacks.getItemAt(i));
					if (itemS.currSize>0 && itemS.item.itemID == source.item.itemID){
						same_category = true;
						break;
					}	
				}
				if (same_category == false){
					target.pushItemFromSimilarStack(source);
//					char.appearance = "assets/"+(String)(char.name.value)+"_"+target.itemType+".jpg";
					char.appearance_weapon = "assets/"+(String)(char.gender.value)+"/"+target.item.itemTitle+".png";
				}			
			}
			
			private function acceptDrop(dragEvent:DragEvent):void{
				trace("accept Drop");
				var dropTarget:IUIComponent = dragEvent.currentTarget as IUIComponent;
				
				DragManager.acceptDragDrop(dropTarget);
			}
			
			private function handleDrop(dragEvent:DragEvent):void{
				var dragInitiator:IUIComponent = dragEvent.dragInitiator;
				var dropTarget:IUIComponent = dragEvent.currentTarget as IUIComponent;
				//handle dropping
				var same_category:Boolean = false;
				for(var i:int=0;i<char.current_items.maxSize;i++){
					var itemS:ItemStack = ItemStack(char.current_items.list_itemStacks.getItemAt(i));					
					if (itemS.currSize>0 && itemS.item.itemID == ItemStackView(dragInitiator).itemStack.item.itemID){
						same_category =  true;
						break;
					}
				}
				if (same_category == false){
					for(var j:int=0;j<char.current_items.maxSize;j++){
						var itemS2:ItemStack = ItemStack(char.current_items.list_itemStacks.getItemAt(j));		
						if (itemS2.currSize ==0){
							itemS2.pushItemFromSimilarStack(ItemStackView(dragInitiator).itemStack);
//							char.appearance = "assets/"+(String)(char.name.value)+"_"+itemS.itemType+".jpg";
							char.appearance_weapon = "assets/"+(String)(char.gender.value)+"/"+itemS2.item.itemTitle+".png";
							break;
						}
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<views:AttributeView 	char="{char}"
							  height="100%"
							  width="180"/>
	
	<s:Group width="100%" height="100%">
		
		<s:layout>
			<s:VerticalLayout gap="10" paddingLeft="0"/>			
		</s:layout>
		
		<views:CurrentItemListView id="current_list_view1" current_items="{char.current_items}"
								   start_index="0"/>
		
		<s:Group id="character_apperance_container"
				 width="100%" height="100%">
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
			<s:BitmapImage id="character_appearance" width="295" height="295" 
						   source="{char.appearance_basebody}"
						   />	
			<s:BitmapImage id="character_appearance2" width="295" height="295"
						   source="{char.appearance_basehead}"
						   />	
			<s:BitmapImage id="character_appearance3" width="270" height="270"
						   source="{char.appearance_torso}"
						   />	
			<s:BitmapImage id="character_appearance4" width="270" height="270"
						   source="{char.appearance_head}"
						   />	
			<s:BitmapImage id="character_appearance5" width="270" height="270"
						   source="{char.appearance_legs}"
						   />	
			<s:BitmapImage id="character_appearance6" width="270" height="270"
						   source="{char.appearance_feet}"
						   />	
			<s:BitmapImage id="character_appearance7" width="270" height="270"
						   source="{char.appearance_shoulders}"
						   />	
			<s:BitmapImage id="character_appearance8" width="270" height="270"
						   source="{char.appearance_hands}"
						   />	
			<s:BitmapImage id="character_appearance9" width="270" height="270"
						   source="{char.appearance_weapon}"
						   />	
			<s:BitmapImage id="character_appearance10" width="270" height="270"
						   source="{char.appearance_offhand}"
						   />	
			<s:Label text="{char.appearance_weapon}" fontSize="8"/>
		</s:Group>
		

		
		<views:CurrentItemListView id="current_list_view2" current_items="{char.current_items}"
								   start_index="7"/>
	
	</s:Group>
	
	<views:InventoryView char="{char}" inventory="{char.inventory}"/>
	
</s:TitleWindow>
