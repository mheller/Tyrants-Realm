<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   xmlns:hud = "hud.*"
			   xmlns:pkgInventory="pkgInventory.*"
			   xmlns:dungeon="dungeon.*"
			   width="100%" height ="100%"
			   creationComplete="creationCompleteHandler(event)"
			   backgroundColor="#000000" xmlns:views="views.*"
			   >
	<fx:Declarations>
		
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import character.*;
			import character.SkillsSpells;
			
=======
			import character.*;	

>>>>>>> 1bf6bce064be3aad4533da7d4dbcd6dc46ae97a2
			import dungeon.*;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			
			import pkgInventory.Item;
			
			import pkgParty.CharacterDblClickedEvent;
			import pkgParty.CharacterSelectedEvent;
			import pkgParty.Party;
			
			import spark.components.TitleWindow;
			
			import views.CharacterView;
			
			[Bindable] 
			public var account:Account = new Account(1);
			
			[Bindable]
			public var server:Server = new Server(1, "Deepest Night", "192.168.1.3", "deepestnight.draconisdev.com");
			
			[Bindable]
			public var player:Player = new Player(1,"Arthur Dent", server, account, 1, 1, 0);
					
			[Bindable] //do really need
			public var currChar:Character;// = new Character("Jane Doe","female",100,0,1);
			
			[Bindable]
			public var party1:Party = new Party("myParty",10);
						
			[Bindable]
			public var map:Map;
			
			[Bindable]
			public var skills_spells:Vector.<SkillsSpells> = new Vector.<SkillsSpells>();
					
			// Hardcoded demo party
			[Bindable]
			public var char2:Character = new Character("Jane","Female","Defender",50, 100, 0, 0, 1, 0, 0, 0, 0, 10, 5, 5, 8, 9, 20, 25, 0, 1, "Fists", 0,0, 0,0,0,0, 1,0, "assets/OotE/Female/Body.jpg", "assets/OotE/Female/Head1 - Black.png");
			[Bindable]
			public var char3:Character = new Character("Jill","Female", "Elementalist", 100, 100, 0, 0, 1, 100, 100, 0, 0, 5, 10, 9, 6, 5, 15, 35, 0, 1, "Fists", 1, 2, 0,0,0,0, 2,0, "assets/OotE/Female/Body.jpg", "assets/OotE/Female/Head2 - Blonde.png");
			[Bindable]
			public var char4:Character = new Character("Jack","Male", "Hand of Grace", 100, 100, 0, 0, 1, 100, 100, 0, 0, 5,8, 10, 5, 8, 15, 30, 0, 1, "Fists", 1,1, 0,0,0,0, 3,0,"assets/OotE/Male/Body.jpg", "assets/OotE/Male/Head1 - Black.png");
			[Bindable]
			public var char5:Character = new Character("Julia","Female", "Tempus Diem Fur", 100, 100, 0, 0, 1, 8, 10, 0, 0, 6, 5, 5, 10, 10, 15, 35, 0, 1, "Fists", 0,0, 0,0,0,0, 4,0,"assets/OotE/Female/Body.jpg", "assets/OotE/Female/Head3 - Red.png");
			[Bindable]
			public var char6:Character = new Character("Foo","Female", "Summoner", 100, 100, 0, 0, 1, 8, 10, 0, 0, 6, 5, 5, 10, 10, 15, 35, 0, 1, "Fists", 0,0, 0,0,0,0, 5,0,"assets/OotE/Female/Body.jpg", "assets/OotE/Female/Head2 - Blonde.png");
			[Bindable]
			public var char7:Character = new Character("LongLong","Male", "Enhancer", 100, 100, 0, 0, 1, 8, 10, 0, 0, 6, 5, 5, 10, 10, 15, 35, 0, 1, "Fists", 0,0, 0,0,0,0, 6,0,"assets/OotE/Male/Body.jpg", "assets/OotE/Male/Head1 - Black.png");
	
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{				
				
				party1.addChar(char2);
				char2.invLoader(1);
				char2.invLoader(13);
				char2.invLoader(28);
				char2.invLoader(18);
				char2.invLoader(19);
				char2.invLoader(22);
				char2.invLoader(25);
				char2.invLoader(15);
				char2.invLoader(16);
				char2.invLoader(7);
				char2.invLoader(29);
				char2.invLoader(10000);
				char2.invLoader(10001);
				
				party1.addChar(char3);
				char3.invLoader(28);
				char3.invLoader(29);
				char3.invLoader(5);
				char3.invLoader(7);
				char3.invLoader(10001);
				char3.invLoader(10000);
				
				party1.addChar(char4);
				char4.invLoader(13);
				char4.invLoader(29);
				char4.invLoader(15);
				char4.invLoader(7);
				char4.invLoader(10001);
				char4.invLoader(10001);

				party1.addChar(char5);
				char5.invLoader(16);
				char5.invLoader(29);
				char5.invLoader(5);
				char5.invLoader(4);
				char5.invLoader(10001);
				char5.invLoader(10000);

				party1.addChar(char6);
				char6.invLoader(18);
				char6.invLoader(19);
				char6.invLoader(5);
				char6.invLoader(22);
				char6.invLoader(10001);
				char6.invLoader(10000);

				party1.addChar(char7);
				char7.invLoader(26);
				char7.invLoader(27);
				char7.invLoader(1);
				char7.invLoader(7);
				char7.invLoader(10001);
				char7.invLoader(10000);
				
				party1.setCurrChar(party1.getCharAt(0));
				this.currChar = party1.getCurrChar();
				
				addEventListener("finishedLoadingMapXML", start3D);//later, will do this one in Preloader
				map = new Map();	
				view.addElement(map);
								
				addEventListener(KeyboardEvent.KEY_DOWN, reportKeyDown);
				addEventListener(MouseEvent.CLICK, reportMouseDown);

				var name:String = this.party1.getName();
//				party_name.x = hud_party.width / 2 - (name.length / 2);
				party_name.x = "22";
				party_name.text = name;
				
				for (var i:int = 0; i <= 200; i++) {
					skills_spells[i] = new SkillsSpells(i);
				}
			}		
			
			public function reportKeyDown(event:KeyboardEvent):void 
			{ 
				trace("Key Pressed: " + String.fromCharCode(event.charCode) +         " (character code: " + event.charCode + ")");

				if (String.fromCharCode(event.charCode) == 'm')
					hud_map.showMapView();
				if (String.fromCharCode(event.charCode) == 'o')
					this.hud_party.party_view.addXP(350,this.hud_party.party_view.aParty.getCurrChar());
				if (String.fromCharCode(event.charCode) == 'l')
					hud_logout.showLogoutView();
				if (String.fromCharCode(event.charCode) == 'i') {
					hud_party.party_view.handleCharacterDblClicked(new CharacterDblClickedEvent("CharacterIsDblClicked",true,false,this.currChar,0));
						
//					hud_attribute.clickHander(event);
				}
				if (String.fromCharCode(event.charCode) == 'p') {
					hud_party.showPartyView();
					if (party_name.text=="")
						party_name.text = this.party1.getName();
					else
						party_name.text = "";
				}

			} 
			
			public function reportMouseDown(event:MouseEvent):void 
			{ 
				if (event.target == hud_map) hud_settings.label="testing";
				dungeon3D.setFocus();
			}
			
			public function start3D(e:Event):void{
				//trace(map);
//				dungeon3D =  new Dungeon_6(map);
//				addElement(dungeon3D);
				dungeon3D.init();
				hud_map.showMapView();
				hud_chat.showChatView();
				hud_party.showPartyView();
				hud_dungeon.showDungeonView();
				
				//this.setFocus();
				//this.systemManager.addEventListener("CharacterIsSelected",handleCharacterSelected);
				
			}
			
					
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		s|Button#hud_attribute {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_logout {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_settings {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_ranking {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_forum {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_party_groups {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_shop {
			skinClass: ClassReference("skins.MainHUDButtonSkin");
		}
		s|Button#hud_dungeon {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_world {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_town {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_inv_drop {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_inv_transfer {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_skills_spells {
			skinClass: ClassReference("skins.InventoryButtonSkin");
		}
		s|Button#hud_inv_left {
			skinClass: ClassReference("skins.InventoryShiftLeftSkin");
		}
		s|Button#hud_level_up {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#hud_inv_right {
			skinClass: ClassReference("skins.InventoryShiftRightSkin");
		}
		s|Button#world_filter {
			skinClass: ClassReference("skins.ChatWorldFilterButtonSkin");
		}
		s|Button#faction_filter {
			skinClass: ClassReference("skins.ChatFactionFilterButtonSkin");
		}
		s|Button#guild_filter {
			skinClass: ClassReference("skins.ChatGuildFilterButtonSkin");
		}
		s|Button#raid_filter {
			skinClass: ClassReference("skins.ChatRaidFilterButtonSkin");
		}
		s|Button#private_filter {
			skinClass: ClassReference("skins.ChatPrivateFilterButtonSkin");
		}
		s|Button#info_filter {
			skinClass: ClassReference("skins.ChatInfoFilterButtonSkin");
		}
		s|Button#system_filter {
			skinClass: ClassReference("skins.ChatSystemFilterButtonSkin");
		}
		s|Button#chat_enter {
			skinClass: ClassReference("skins.ChatEnterButtonSkin");
		}
		s|Button#hud_chat_toggle {
			skinClass: ClassReference("skins.ChatToggleButtonSkin");
		}
		s|Button#lub1 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub2 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub3 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub4 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub5 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub6 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub7 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub8 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub9 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		s|Button#lub10 {
			skinClass: ClassReference("skins.NPCLevelUpButtonSkin");
		}
		

	</fx:Style>

	<s:Group id="view" width="900" height="600"> 
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<dungeon:Dungeon_6 id="dungeon3D" width="100%" height = "100%"
						   map="{this.map}"/>

		<s:Group x="535" y="25" >
			<s:HGroup>
				<hud:HudTown id="hud_town" label="T" width="45" height="45"/>
				<hud:HudWorld id="hud_world" label="W" width="45" height="45"/>
				<hud:HudDungeon id="hud_dungeon" label="D" width="45" height="45"/>
			</s:HGroup>
		</s:Group>
				
		<s:Group x="680" y="785" >
			<s:HGroup>
				<hud:HudPartyGroups id="hud_party_groups" label="Parties"/>
				<hud:HudShop id="hud_shop" label="Shop"/>
				<hud:HudRanking id="hud_ranking" label="Rankings"/>			
				<hud:HudForum id="hud_forum" label="Forum"/>
				<hud:HudSettings id="hud_settings" label="Settings"/>
				<hud:HudLogout id="hud_logout" label="Logout"/>
				<hud:HudChat id="hud_chat" width="100%" height="100%" visible="false"/>				
				<hud:HudAttribute id="hud_attribute" label="Attribute" char="{this.currChar}" party="{this.party1}" visible="false"/>			
				<hud:HudParty id="hud_party" width="100%" height="100%" visible="false" aParty="{this.party1}"/>		
			</s:HGroup>			
		</s:Group>

		<s:Group x="1060" y="85" >
			<hud:HudMap id="hud_map" width="100%" height="100%"
						map="{map}"
						dungeon3D="{dungeon3D}" visible="false"/>				
		</s:Group>
		<s:Label id="party_name" y="25" fontSize="16" fontWeight="bold"/>

	</s:Group>
	
	
	
</s:Application>