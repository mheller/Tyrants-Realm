<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:resizableTitleWindow ="resizableTitleWindow.*"
			   title="Map"
			   height="200" width="200"
			   close="handleCloseEvent();"
			   creationComplete="creationCompleteHandler(event)"
			   x="924">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import away3d.cameras.Camera3D;
			import away3d.core.utils.Color;
			
			import dungeon.Dungeon_6;
			import dungeon.Map;
			
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			import mx.managers.LayoutManager;
			import mx.managers.PopUpManager;
			
			import spark.components.Group;
			import spark.components.SkinnableContainer;
			import spark.primitives.Rect;
			import spark.primitives.supportClasses.FilledElement;
			
			[Bindable]
			public var map:Map;
			
			public var dungeon3D:Dungeon_6;
			
			private var _grid_width:Number;
			private var _grid_height:Number;//33 is the height of the window bar
			private var _user_position:Rect;
			private function handleCloseEvent():void{
				visible = false;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{	
				var grid:Rect;
				//grid size is scaled with the size of its container
				_grid_width = (this.width-2)/map.numGridsX;
				_grid_height = (this.height-33)/map.numGridsZ;
				
				_user_position = new Rect();
				_user_position.fill = new SolidColor(Color.yellow);
				_user_position.width = 5;
				_user_position.height = 5;
				
				for (var i:int = 0; i<map.numGridsX; i++)
					for (var j:int =0; j<map.numGridsZ; j++){
						if (map.map_array[i][j] != null){
							grid = new Rect();							
							grid.x = i* _grid_width;
							grid.y = _grid_height*(map.numGridsZ-1) - j* _grid_height;
							grid.width = _grid_width;
							grid.height = _grid_height;
							grid.fill = new SolidColor(Color.black);						
							this.addElement(grid);
						}		
					}		
				addEventListener(Event.ENTER_FRAME, _updateCameraPosition);			
			}
			
			private function _updateCameraPosition(e:Event):void{
				var cam_pos:Vector3D = dungeon3D.getCurCamPos();			
			
				_user_position.x =  _grid_width *( int(cam_pos.x/Dungeon_6.gridWidth) + (cam_pos.x % Dungeon_6.gridWidth)/Dungeon_6.gridWidth);
				_user_position.y = _grid_height*map.numGridsZ - _grid_height * (int(cam_pos.z/Dungeon_6.gridHeight) + (cam_pos.z % Dungeon_6.gridDepth)/Dungeon_6.gridDepth);
				this.addElement(_user_position);
				trace(cam_pos.x/Dungeon_6.gridWidth );
				trace(cam_pos.z % Dungeon_6.gridDepth);
			}
			
		]]>
	</fx:Script>
	
	<!--mx:Image source="@Embed(source='assets/hud_map.gif')"
			  width="100%" height="100%"		  
			  /-->
	
</s:TitleWindow>
