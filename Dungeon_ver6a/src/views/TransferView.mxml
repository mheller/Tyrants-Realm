<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 x="5" y="5"
		 creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import character.Character;
			
			import events.DragDropEvent;
			
			import hud.HudAttribute;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.BitmapAsset;
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import pkgInventory.ItemStack;
			import pkgInventory.ItemStackView;
			
			import pkgParty.CharacterDblClickedEvent;
			import pkgParty.CharacterSelectedEvent;
			import pkgParty.Party;
			import pkgParty.ViewEachCharInParty;
			
			import spark.components.Button;
			import spark.components.Label;
			import spark.filters.GlowFilter;
			import spark.layouts.BasicLayout;
			import spark.layouts.VerticalLayout;
			import spark.primitives.BitmapImage;
			import spark.primitives.Line;
			
			import views.CharacterView;
			
			[Bindable]
			public var aParty: Party;
			
			[Bindable]
			public var character_view:CharacterView;
			
			private function handleCloseEvent():void{
				visible = false;
			}
			
			
			private function handleCharacterSelected(event:CharacterSelectedEvent):void {
				var source:ItemStackView = ItemStackView((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.xferEvent.dragInitiator);   // ItemStackView
				(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.performItemXfer(source,(ViewEachCharInParty)(event.target));
				PopUpManager.removePopUp((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer);

			}
			
			
			private function targetSelected(e:MouseEvent):void {
				var index:int = (Button)(e.target).id;
				var source:ItemStackView = ItemStackView((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.xferEvent.dragInitiator);   // ItemStackView
				var selectedNPC:Character = this.aParty.getCharAt(index);
				
				(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.performItemXfer2(source,selectedNPC);
				PopUpManager.removePopUp((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer);				
			}

			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if ((TyrantsRealm)(this.parentApplication).hud_party.aParty == null) return;
				this.aParty = (TyrantsRealm)(this.parentApplication).hud_party.aParty;
				var currPop:int = aParty.getCurrPopulation();
				var i:int;
				var size:int;
				var height:int;
				
				// Change Selected NPC
//				addEventListener("CharacterIsSelected",this.handleCharacterSelected);								
				
				// Item image
				var itemForTransfer:BitmapImage = new BitmapImage();
				itemForTransfer.source=(ItemStackView)((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.xferEvent.dragInitiator)
					.itemStack.displayPath;
				itemForTransfer.y = 0;
				itemForTransfer.height = 72;
				itemForTransfer.width = 72;

				var filter : GlowFilter = new GlowFilter();
				filter.blurX = 14;
				filter.blurY = 14;
				filter.quality = 6;
				filter.alpha = 0.5;
				filter.color = 0xFF0000;
				filter.inner = false;
				itemForTransfer.filters = [filter];
				
				
				var itemImageGroup : Group = new Group();
				itemImageGroup.layout = new BasicLayout();
				itemImageGroup.addElement(itemForTransfer);
				addElement(itemImageGroup);
				
				
				// Text msg
				var info:Label = new Label();
				info.text = "Please select target:";
				info.x = 5;
				info.y = 100;
				info.setStyle("color", "White");	
				addElement(info);

				size = info.text.length;
				
				var partyMemberGroup:Group = new Group();
				partyMemberGroup.layout = new VerticalLayout();
				
				var diam:int = 85;
				
				for (i=0; i<currPop; i++) {					
					if (aParty.getCharAt(i).getName().length > size) size = aParty.getCharAt(i).getName().length;
				}
				
				height=129;
				var index:int = 0;
				for(i=0; i<currPop; i++){
					var char:Character = aParty.getCharAt(i);
					var viewAChar:Button = new Button();
					viewAChar.width = 98+size;					
					viewAChar.label = char.getName();
					viewAChar.id = index.toString(10);
					index++;
					height += 35;
					viewAChar.x=0;
					viewAChar.y=0;
					viewAChar.addEventListener(MouseEvent.ROLL_OVER, glowOn);
					viewAChar.addEventListener(MouseEvent.ROLL_OUT, glowOff);
					viewAChar.addEventListener(MouseEvent.CLICK, targetSelected);

/*					if (aParty.getCurrCharIndex() == i) continue;  // Filters current user so not able to txfr to self
					
					var viewAChar:ViewEachCharInParty = new ViewEachCharInParty();
					
					viewAChar.removeEventListener(DragEvent.DRAG_DROP,(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.xferItem);

					viewAChar.char = aParty.getCharAt(i);
					viewAChar.index_in_partyview = i;

					if (viewAChar.char.gender.getValue() == "Male") 
						viewAChar.bmpImg.x="-130";
					else
						viewAChar.bmpImg.x="-135";
					
					viewAChar.height=diam;
					viewAChar.width=diam;
					viewAChar.basehead.x=viewAChar.bmpImg.x;
					viewAChar.char_torso.x=viewAChar.bmpImg.x;
					viewAChar.char_head.x=viewAChar.bmpImg.x;
					viewAChar.char_legs.x=viewAChar.bmpImg.x;
					viewAChar.char_feet.x=viewAChar.bmpImg.x;
					viewAChar.char_shoulders.x=viewAChar.bmpImg.x;
					viewAChar.char_hands.x=viewAChar.bmpImg.x;
					viewAChar.char_weapon.x=viewAChar.bmpImg.x;
					viewAChar.char_offhand.x=viewAChar.bmpImg.x;
										
					// Remove health/spirae bars
					viewAChar.health_group.removeAllElements();
					viewAChar.spirae_group.removeAllElements();
					
					viewAChar.char = aParty.getCharAt(i);
					viewAChar.index_in_partyview = i;

					viewAChar.x=0;
					viewAChar.y=0;
					viewAChar.addEventListener(MouseEvent.ROLL_OVER, glowOn);
					viewAChar.addEventListener(MouseEvent.ROLL_OUT, glowOff);
					
															// Add Character name element
					var name:Label = new Label();
					name.text = viewAChar.char.name.getValue();
					if (name.text.length > parentWidth) parentWidth = name.text.length;
					name.x = diam +20;
					name.y = diam / 2 + (diam+6)*i;
					name.setStyle("color", "White");	
//					viewAChar.character_appearance_container.addElement(name);
					this.addElement(name);
					*/
					partyMemberGroup.addElement(viewAChar);
				}
				partyMemberGroup.x=0;
				partyMemberGroup.y=129;
				this.addElement(partyMemberGroup);
				
				// Adjust the window width and item image centering dynamically.
				(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.width = 110 + size;
				(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.height = height;
				(TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.y = ((TyrantsRealm)(this.parentApplication).height / 2) - (height / 2);
				this.height = height;
				
				itemForTransfer.x = (110+size)/2 - 42;
				

				// Divider
				this.graphics.lineStyle(3, 0xFFFFFF, 100);
				this.graphics.moveTo(-4,82);
				this.graphics.lineTo((TyrantsRealm)(this.parentApplication).hud_attribute.character_view.inv_view.hudTransfer.width-8,82);

			}
			
			private function glowOff(e:MouseEvent):void {
				(Button)(e.currentTarget).filters = [ ];
			}
			private function glowOn(e:MouseEvent):void {
				var filter : GlowFilter = new GlowFilter();
				filter.blurX = 14;
				filter.blurY = 14;
				filter.quality = 6;
				filter.alpha = 0.5;
				filter.color = 0xFFD520;
				filter.inner = false;
				(Button)(e.currentTarget).filters = [ filter ];    
			}
		]]>
	</fx:Script>
	
	
	<s:layout>
		<s:BasicLayout/>	
	</s:layout>
	
</s:Group>
